### YamlMime:ManagedReference
items:
- uid: Frent.Core.EntityType
  commentId: T:Frent.Core.EntityType
  id: EntityType
  parent: Frent.Core
  children:
  - Frent.Core.EntityType.Equals(Frent.Core.EntityType)
  - Frent.Core.EntityType.Equals(System.Object)
  - Frent.Core.EntityType.GetHashCode
  - Frent.Core.EntityType.HasComponent(Frent.Core.ComponentID)
  - Frent.Core.EntityType.HasTag(Frent.Core.TagID)
  - Frent.Core.EntityType.Tags
  - Frent.Core.EntityType.Types
  - Frent.Core.EntityType.op_Equality(Frent.Core.EntityType,Frent.Core.EntityType)
  - Frent.Core.EntityType.op_Inequality(Frent.Core.EntityType,Frent.Core.EntityType)
  langs:
  - csharp
  - vb
  name: EntityType
  nameWithType: EntityType
  fullName: Frent.Core.EntityType
  type: Struct
  source:
    remote:
      path: Frent/Core/EntityType.cs
      branch: master
      repo: https://github.com/itsBuggingMe/Frent.git
    id: EntityType
    path: Core/EntityType.cs
    startLine: 9
  assemblies:
  - Frent
  namespace: Frent.Core
  summary: Represents an entity's type, or set of component and tag types that make it up
  example: []
  syntax:
    content: 'public struct EntityType : IEquatable<EntityType>'
    content.vb: Public Structure EntityType Implements IEquatable(Of EntityType)
  implements:
  - System.IEquatable{Frent.Core.EntityType}
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Frent.Core.EntityType.Types
  commentId: P:Frent.Core.EntityType.Types
  id: Types
  parent: Frent.Core.EntityType
  langs:
  - csharp
  - vb
  name: Types
  nameWithType: EntityType.Types
  fullName: Frent.Core.EntityType.Types
  type: Property
  source:
    remote:
      path: Frent/Core/EntityType.cs
      branch: master
      repo: https://github.com/itsBuggingMe/Frent.git
    id: Types
    path: Core/EntityType.cs
    startLine: 17
  assemblies:
  - Frent
  namespace: Frent.Core
  summary: The component types
  example: []
  syntax:
    content: public readonly ImmutableArray<Type> Types { get; }
    parameters: []
    return:
      type: System.Collections.Immutable.ImmutableArray{System.Type}
    content.vb: Public ReadOnly Property Types As ImmutableArray(Of Type)
  overload: Frent.Core.EntityType.Types*
- uid: Frent.Core.EntityType.Tags
  commentId: P:Frent.Core.EntityType.Tags
  id: Tags
  parent: Frent.Core.EntityType
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: EntityType.Tags
  fullName: Frent.Core.EntityType.Tags
  type: Property
  source:
    remote:
      path: Frent/Core/EntityType.cs
      branch: master
      repo: https://github.com/itsBuggingMe/Frent.git
    id: Tags
    path: Core/EntityType.cs
    startLine: 22
  assemblies:
  - Frent
  namespace: Frent.Core
  summary: The tag types
  example: []
  syntax:
    content: public readonly ImmutableArray<Type> Tags { get; }
    parameters: []
    return:
      type: System.Collections.Immutable.ImmutableArray{System.Type}
    content.vb: Public ReadOnly Property Tags As ImmutableArray(Of Type)
  overload: Frent.Core.EntityType.Tags*
- uid: Frent.Core.EntityType.HasComponent(Frent.Core.ComponentID)
  commentId: M:Frent.Core.EntityType.HasComponent(Frent.Core.ComponentID)
  id: HasComponent(Frent.Core.ComponentID)
  parent: Frent.Core.EntityType
  langs:
  - csharp
  - vb
  name: HasComponent(ComponentID)
  nameWithType: EntityType.HasComponent(ComponentID)
  fullName: Frent.Core.EntityType.HasComponent(Frent.Core.ComponentID)
  type: Method
  source:
    remote:
      path: Frent/Core/EntityType.cs
      branch: master
      repo: https://github.com/itsBuggingMe/Frent.git
    id: HasComponent
    path: Core/EntityType.cs
    startLine: 29
  assemblies:
  - Frent
  namespace: Frent.Core
  summary: Checks if this <xref href="Frent.Core.EntityType" data-throw-if-not-resolved="false"></xref> has a component represented by a <xref href="Frent.Core.ComponentID" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public bool HasComponent(ComponentID componentID)
    parameters:
    - id: componentID
      type: Frent.Core.ComponentID
      description: The ID of the component type to check if this <xref href="Frent.Core.EntityType" data-throw-if-not-resolved="false"></xref> has
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if this Entity type has a component of the specified component ID, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise
    content.vb: Public Function HasComponent(componentID As ComponentID) As Boolean
  overload: Frent.Core.EntityType.HasComponent*
- uid: Frent.Core.EntityType.HasTag(Frent.Core.TagID)
  commentId: M:Frent.Core.EntityType.HasTag(Frent.Core.TagID)
  id: HasTag(Frent.Core.TagID)
  parent: Frent.Core.EntityType
  langs:
  - csharp
  - vb
  name: HasTag(TagID)
  nameWithType: EntityType.HasTag(TagID)
  fullName: Frent.Core.EntityType.HasTag(Frent.Core.TagID)
  type: Method
  source:
    remote:
      path: Frent/Core/EntityType.cs
      branch: master
      repo: https://github.com/itsBuggingMe/Frent.git
    id: HasTag
    path: Core/EntityType.cs
    startLine: 36
  assemblies:
  - Frent
  namespace: Frent.Core
  summary: Checks if this <xref href="Frent.Core.EntityType" data-throw-if-not-resolved="false"></xref> has a tag represented by a <xref href="Frent.Core.TagID" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public bool HasTag(TagID tagID)
    parameters:
    - id: tagID
      type: Frent.Core.TagID
      description: The ID of the tag type to check if this <xref href="Frent.Core.EntityType" data-throw-if-not-resolved="false"></xref> has
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if this Entity type has a tag of the specified tag ID, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise
    content.vb: Public Function HasTag(tagID As TagID) As Boolean
  overload: Frent.Core.EntityType.HasTag*
- uid: Frent.Core.EntityType.Equals(Frent.Core.EntityType)
  commentId: M:Frent.Core.EntityType.Equals(Frent.Core.EntityType)
  id: Equals(Frent.Core.EntityType)
  parent: Frent.Core.EntityType
  langs:
  - csharp
  - vb
  name: Equals(EntityType)
  nameWithType: EntityType.Equals(EntityType)
  fullName: Frent.Core.EntityType.Equals(Frent.Core.EntityType)
  type: Method
  source:
    remote:
      path: Frent/Core/EntityType.cs
      branch: master
      repo: https://github.com/itsBuggingMe/Frent.git
    id: Equals
    path: Core/EntityType.cs
    startLine: 43
  assemblies:
  - Frent
  namespace: Frent.Core
  summary: Checks if this <xref href="Frent.Core.EntityType" data-throw-if-not-resolved="false"></xref> represents the same ID as <code class="paramref">other</code>
  example: []
  syntax:
    content: public bool Equals(EntityType other)
    parameters:
    - id: other
      type: Frent.Core.EntityType
      description: The EntityType to compare against
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if they represent the same ID, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise
    content.vb: Public Function Equals(other As EntityType) As Boolean
  overload: Frent.Core.EntityType.Equals*
  implements:
  - System.IEquatable{Frent.Core.EntityType}.Equals(Frent.Core.EntityType)
- uid: Frent.Core.EntityType.Equals(System.Object)
  commentId: M:Frent.Core.EntityType.Equals(System.Object)
  id: Equals(System.Object)
  parent: Frent.Core.EntityType
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: EntityType.Equals(object?)
  fullName: Frent.Core.EntityType.Equals(object?)
  type: Method
  source:
    remote:
      path: Frent/Core/EntityType.cs
      branch: master
      repo: https://github.com/itsBuggingMe/Frent.git
    id: Equals
    path: Core/EntityType.cs
    startLine: 50
  assemblies:
  - Frent
  namespace: Frent.Core
  summary: Checks if this <xref href="Frent.Core.EntityType" data-throw-if-not-resolved="false"></xref> represents the same ID as <code class="paramref">obj</code>
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare against
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if they represent the same ID, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Frent.Core.EntityType.Equals*
  nameWithType.vb: EntityType.Equals(Object)
  fullName.vb: Frent.Core.EntityType.Equals(Object)
  name.vb: Equals(Object)
- uid: Frent.Core.EntityType.GetHashCode
  commentId: M:Frent.Core.EntityType.GetHashCode
  id: GetHashCode
  parent: Frent.Core.EntityType
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: EntityType.GetHashCode()
  fullName: Frent.Core.EntityType.GetHashCode()
  type: Method
  source:
    remote:
      path: Frent/Core/EntityType.cs
      branch: master
      repo: https://github.com/itsBuggingMe/Frent.git
    id: GetHashCode
    path: Core/EntityType.cs
    startLine: 56
  assemblies:
  - Frent
  namespace: Frent.Core
  summary: Gets the hash code for this <xref href="Frent.Core.EntityType" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: An integer hash code representing this <xref href="Frent.Core.EntityType" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: Frent.Core.EntityType.GetHashCode*
- uid: Frent.Core.EntityType.op_Equality(Frent.Core.EntityType,Frent.Core.EntityType)
  commentId: M:Frent.Core.EntityType.op_Equality(Frent.Core.EntityType,Frent.Core.EntityType)
  id: op_Equality(Frent.Core.EntityType,Frent.Core.EntityType)
  parent: Frent.Core.EntityType
  langs:
  - csharp
  - vb
  name: operator ==(EntityType, EntityType)
  nameWithType: EntityType.operator ==(EntityType, EntityType)
  fullName: Frent.Core.EntityType.operator ==(Frent.Core.EntityType, Frent.Core.EntityType)
  type: Operator
  source:
    remote:
      path: Frent/Core/EntityType.cs
      branch: master
      repo: https://github.com/itsBuggingMe/Frent.git
    id: op_Equality
    path: Core/EntityType.cs
    startLine: 64
  assemblies:
  - Frent
  namespace: Frent.Core
  summary: Checks if two <xref href="Frent.Core.EntityType" data-throw-if-not-resolved="false"></xref> instances represent the same ID
  example: []
  syntax:
    content: public static bool operator ==(EntityType left, EntityType right)
    parameters:
    - id: left
      type: Frent.Core.EntityType
      description: The first EntityType
    - id: right
      type: Frent.Core.EntityType
      description: The second EntityType
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if they represent the same ID, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise
    content.vb: Public Shared Operator =(left As EntityType, right As EntityType) As Boolean
  overload: Frent.Core.EntityType.op_Equality*
  nameWithType.vb: EntityType.=(EntityType, EntityType)
  fullName.vb: Frent.Core.EntityType.=(Frent.Core.EntityType, Frent.Core.EntityType)
  name.vb: =(EntityType, EntityType)
- uid: Frent.Core.EntityType.op_Inequality(Frent.Core.EntityType,Frent.Core.EntityType)
  commentId: M:Frent.Core.EntityType.op_Inequality(Frent.Core.EntityType,Frent.Core.EntityType)
  id: op_Inequality(Frent.Core.EntityType,Frent.Core.EntityType)
  parent: Frent.Core.EntityType
  langs:
  - csharp
  - vb
  name: operator !=(EntityType, EntityType)
  nameWithType: EntityType.operator !=(EntityType, EntityType)
  fullName: Frent.Core.EntityType.operator !=(Frent.Core.EntityType, Frent.Core.EntityType)
  type: Operator
  source:
    remote:
      path: Frent/Core/EntityType.cs
      branch: master
      repo: https://github.com/itsBuggingMe/Frent.git
    id: op_Inequality
    path: Core/EntityType.cs
    startLine: 72
  assemblies:
  - Frent
  namespace: Frent.Core
  summary: Checks if two <xref href="Frent.Core.EntityType" data-throw-if-not-resolved="false"></xref> instances represent different IDs
  example: []
  syntax:
    content: public static bool operator !=(EntityType left, EntityType right)
    parameters:
    - id: left
      type: Frent.Core.EntityType
      description: The first EntityType
    - id: right
      type: Frent.Core.EntityType
      description: The second EntityType
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if they represent different IDs, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise
    content.vb: Public Shared Operator <>(left As EntityType, right As EntityType) As Boolean
  overload: Frent.Core.EntityType.op_Inequality*
  nameWithType.vb: EntityType.<>(EntityType, EntityType)
  fullName.vb: Frent.Core.EntityType.<>(Frent.Core.EntityType, Frent.Core.EntityType)
  name.vb: <>(EntityType, EntityType)
references:
- uid: Frent.Core
  commentId: N:Frent.Core
  href: Frent.html
  name: Frent.Core
  nameWithType: Frent.Core
  fullName: Frent.Core
  spec.csharp:
  - uid: Frent
    name: Frent
    href: Frent.html
  - name: .
  - uid: Frent.Core
    name: Core
    href: Frent.Core.html
  spec.vb:
  - uid: Frent
    name: Frent
    href: Frent.html
  - name: .
  - uid: Frent.Core
    name: Core
    href: Frent.Core.html
- uid: System.IEquatable{Frent.Core.EntityType}
  commentId: T:System.IEquatable{Frent.Core.EntityType}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<EntityType>
  nameWithType: IEquatable<EntityType>
  fullName: System.IEquatable<Frent.Core.EntityType>
  nameWithType.vb: IEquatable(Of EntityType)
  fullName.vb: System.IEquatable(Of Frent.Core.EntityType)
  name.vb: IEquatable(Of EntityType)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Frent.Core.EntityType
    name: EntityType
    href: Frent.Core.EntityType.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Frent.Core.EntityType
    name: EntityType
    href: Frent.Core.EntityType.html
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Frent.Core.EntityType.Types*
  commentId: Overload:Frent.Core.EntityType.Types
  href: Frent.Core.EntityType.html#Frent_Core_EntityType_Types
  name: Types
  nameWithType: EntityType.Types
  fullName: Frent.Core.EntityType.Types
- uid: System.Collections.Immutable.ImmutableArray{System.Type}
  commentId: T:System.Collections.Immutable.ImmutableArray{System.Type}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableArray`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  name: ImmutableArray<Type>
  nameWithType: ImmutableArray<Type>
  fullName: System.Collections.Immutable.ImmutableArray<System.Type>
  nameWithType.vb: ImmutableArray(Of Type)
  fullName.vb: System.Collections.Immutable.ImmutableArray(Of System.Type)
  name.vb: ImmutableArray(Of Type)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Collections.Immutable.ImmutableArray`1
  commentId: T:System.Collections.Immutable.ImmutableArray`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  name: ImmutableArray<T>
  nameWithType: ImmutableArray<T>
  fullName: System.Collections.Immutable.ImmutableArray<T>
  nameWithType.vb: ImmutableArray(Of T)
  fullName.vb: System.Collections.Immutable.ImmutableArray(Of T)
  name.vb: ImmutableArray(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Immutable
  commentId: N:System.Collections.Immutable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Immutable
  nameWithType: System.Collections.Immutable
  fullName: System.Collections.Immutable
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
- uid: Frent.Core.EntityType.Tags*
  commentId: Overload:Frent.Core.EntityType.Tags
  href: Frent.Core.EntityType.html#Frent_Core_EntityType_Tags
  name: Tags
  nameWithType: EntityType.Tags
  fullName: Frent.Core.EntityType.Tags
- uid: Frent.Core.EntityType
  commentId: T:Frent.Core.EntityType
  parent: Frent.Core
  href: Frent.Core.EntityType.html
  name: EntityType
  nameWithType: EntityType
  fullName: Frent.Core.EntityType
- uid: Frent.Core.ComponentID
  commentId: T:Frent.Core.ComponentID
  parent: Frent.Core
  href: Frent.Core.ComponentID.html
  name: ComponentID
  nameWithType: ComponentID
  fullName: Frent.Core.ComponentID
- uid: Frent.Core.EntityType.HasComponent*
  commentId: Overload:Frent.Core.EntityType.HasComponent
  href: Frent.Core.EntityType.html#Frent_Core_EntityType_HasComponent_Frent_Core_ComponentID_
  name: HasComponent
  nameWithType: EntityType.HasComponent
  fullName: Frent.Core.EntityType.HasComponent
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Frent.Core.TagID
  commentId: T:Frent.Core.TagID
  parent: Frent.Core
  href: Frent.Core.TagID.html
  name: TagID
  nameWithType: TagID
  fullName: Frent.Core.TagID
- uid: Frent.Core.EntityType.HasTag*
  commentId: Overload:Frent.Core.EntityType.HasTag
  href: Frent.Core.EntityType.html#Frent_Core_EntityType_HasTag_Frent_Core_TagID_
  name: HasTag
  nameWithType: EntityType.HasTag
  fullName: Frent.Core.EntityType.HasTag
- uid: Frent.Core.EntityType.Equals*
  commentId: Overload:Frent.Core.EntityType.Equals
  href: Frent.Core.EntityType.html#Frent_Core_EntityType_Equals_Frent_Core_EntityType_
  name: Equals
  nameWithType: EntityType.Equals
  fullName: Frent.Core.EntityType.Equals
- uid: System.IEquatable{Frent.Core.EntityType}.Equals(Frent.Core.EntityType)
  commentId: M:System.IEquatable{Frent.Core.EntityType}.Equals(Frent.Core.EntityType)
  parent: System.IEquatable{Frent.Core.EntityType}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(EntityType)
  nameWithType: IEquatable<EntityType>.Equals(EntityType)
  fullName: System.IEquatable<Frent.Core.EntityType>.Equals(Frent.Core.EntityType)
  nameWithType.vb: IEquatable(Of EntityType).Equals(EntityType)
  fullName.vb: System.IEquatable(Of Frent.Core.EntityType).Equals(Frent.Core.EntityType)
  spec.csharp:
  - uid: System.IEquatable{Frent.Core.EntityType}.Equals(Frent.Core.EntityType)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Frent.Core.EntityType
    name: EntityType
    href: Frent.Core.EntityType.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Frent.Core.EntityType}.Equals(Frent.Core.EntityType)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Frent.Core.EntityType
    name: EntityType
    href: Frent.Core.EntityType.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: Frent.Core.EntityType.GetHashCode*
  commentId: Overload:Frent.Core.EntityType.GetHashCode
  href: Frent.Core.EntityType.html#Frent_Core_EntityType_GetHashCode
  name: GetHashCode
  nameWithType: EntityType.GetHashCode
  fullName: Frent.Core.EntityType.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Frent.Core.EntityType.op_Equality*
  commentId: Overload:Frent.Core.EntityType.op_Equality
  href: Frent.Core.EntityType.html#Frent_Core_EntityType_op_Equality_Frent_Core_EntityType_Frent_Core_EntityType_
  name: operator ==
  nameWithType: EntityType.operator ==
  fullName: Frent.Core.EntityType.operator ==
  nameWithType.vb: EntityType.=
  fullName.vb: Frent.Core.EntityType.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Frent.Core.EntityType.op_Equality*
    name: ==
    href: Frent.Core.EntityType.html#Frent_Core_EntityType_op_Equality_Frent_Core_EntityType_Frent_Core_EntityType_
- uid: Frent.Core.EntityType.op_Inequality*
  commentId: Overload:Frent.Core.EntityType.op_Inequality
  href: Frent.Core.EntityType.html#Frent_Core_EntityType_op_Inequality_Frent_Core_EntityType_Frent_Core_EntityType_
  name: operator !=
  nameWithType: EntityType.operator !=
  fullName: Frent.Core.EntityType.operator !=
  nameWithType.vb: EntityType.<>
  fullName.vb: Frent.Core.EntityType.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Frent.Core.EntityType.op_Inequality*
    name: '!='
    href: Frent.Core.EntityType.html#Frent_Core_EntityType_op_Inequality_Frent_Core_EntityType_Frent_Core_EntityType_
