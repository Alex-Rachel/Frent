### YamlMime:ManagedReference
items:
- uid: Frent.WorldStructQueryExtensions
  commentId: T:Frent.WorldStructQueryExtensions
  id: WorldStructQueryExtensions
  parent: Frent
  children:
  - Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``10(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``11(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``12(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``13(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``14(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``15(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``16(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``17(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``18(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``3(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``4(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``5(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``6(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``7(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``8(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``9(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntity``10(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntity``11(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntity``12(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntity``13(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntity``14(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntity``15(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntity``16(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntity``17(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntity``2(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntity``3(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntity``4(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntity``5(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntity``6(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntity``7(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntity``8(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryEntity``9(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryUniform``10(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryUniform``11(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryUniform``12(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryUniform``13(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryUniform``14(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryUniform``15(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryUniform``16(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryUniform``17(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryUniform``18(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryUniform``2(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryUniform``3(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryUniform``4(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryUniform``5(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryUniform``6(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryUniform``7(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryUniform``8(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQueryUniform``9(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQuery``1(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQuery``10(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQuery``11(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQuery``12(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQuery``13(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQuery``14(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQuery``15(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQuery``16(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQuery``17(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQuery``2(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQuery``3(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQuery``4(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQuery``5(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQuery``6(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQuery``7(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQuery``8(Frent.World,``0)
  - Frent.WorldStructQueryExtensions.InlineQuery``9(Frent.World,``0)
  langs:
  - csharp
  - vb
  name: WorldStructQueryExtensions
  nameWithType: WorldStructQueryExtensions
  fullName: Frent.WorldStructQueryExtensions
  type: Class
  source:
    id: WorldStructQueryExtensions
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.16.cs
    startLine: 23
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: >-
      [Variadic("<TQuery, T>", "<TQuery, |T$, |>", 16)]

      [Variadic("<TQuery, T>", "<TQuery, |T$, |>", 16)]

      [Variadic("Rule.HasComponent(Component<T>.ID)", "|Rule.HasComponent(Component<T$>.ID), |", 16)]

      [Variadic("QueryHashes<T>", "QueryHashes<|T$, |>", 16)]

      [Variadic("QueryEntity<T>", "QueryEntity<|T$, |>", 16)]

      [Variadic("Query<T>", "Query<|T$, |>", 16)]

      [Variadic("<TQuery, TUniform, T>", "<TQuery, TUniform, |T$, |>", 16)]

      [Variadic("Uniform<TUniform, T>", "Uniform<TUniform, |T$, |>", 16)]

      [Variadic("ref T arg", "|ref T$ arg$, |", 16)]

      [Variadic("ref arg", "|ref arg$, |", 16)]

      [Variadic("ChunkHelpers<T>", "ChunkHelpers<|T$, |>", 16)]

      [Variadic("a.GetComponentSpan<T>()", "|a.GetComponentSpan<T$>(), |", 16)]

      public static class WorldStructQueryExtensions
    content.vb: >-
      <Variadic("<TQuery, T>", "<TQuery, |T$, |>", 16)>

      <Variadic("<TQuery, T>", "<TQuery, |T$, |>", 16)>

      <Variadic("Rule.HasComponent(Component<T>.ID)", "|Rule.HasComponent(Component<T$>.ID), |", 16)>

      <Variadic("QueryHashes<T>", "QueryHashes<|T$, |>", 16)>

      <Variadic("QueryEntity<T>", "QueryEntity<|T$, |>", 16)>

      <Variadic("Query<T>", "Query<|T$, |>", 16)>

      <Variadic("<TQuery, TUniform, T>", "<TQuery, TUniform, |T$, |>", 16)>

      <Variadic("Uniform<TUniform, T>", "Uniform<TUniform, |T$, |>", 16)>

      <Variadic("ref T arg", "|ref T$ arg$, |", 16)>

      <Variadic("ref arg", "|ref arg$, |", 16)>

      <Variadic("ChunkHelpers<T>", "ChunkHelpers<|T$, |>", 16)>

      <Variadic("a.GetComponentSpan<T>()", "|a.GetComponentSpan<T$>(), |", 16)>

      Public Module WorldStructQueryExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Frent.Variadic.Generator.VariadicAttribute
    ctor: Frent.Variadic.Generator.VariadicAttribute.#ctor(System.String,System.String,System.Int32)
    arguments:
    - type: System.String
      value: <TQuery, T>
    - type: System.String
      value: <TQuery, |T$, |>
    - type: System.Int32
      value: 16
  - type: Frent.Variadic.Generator.VariadicAttribute
    ctor: Frent.Variadic.Generator.VariadicAttribute.#ctor(System.String,System.String,System.Int32)
    arguments:
    - type: System.String
      value: <TQuery, T>
    - type: System.String
      value: <TQuery, |T$, |>
    - type: System.Int32
      value: 16
  - type: Frent.Variadic.Generator.VariadicAttribute
    ctor: Frent.Variadic.Generator.VariadicAttribute.#ctor(System.String,System.String,System.Int32)
    arguments:
    - type: System.String
      value: Rule.HasComponent(Component<T>.ID)
    - type: System.String
      value: '|Rule.HasComponent(Component<T$>.ID), |'
    - type: System.Int32
      value: 16
  - type: Frent.Variadic.Generator.VariadicAttribute
    ctor: Frent.Variadic.Generator.VariadicAttribute.#ctor(System.String,System.String,System.Int32)
    arguments:
    - type: System.String
      value: QueryHashes<T>
    - type: System.String
      value: QueryHashes<|T$, |>
    - type: System.Int32
      value: 16
  - type: Frent.Variadic.Generator.VariadicAttribute
    ctor: Frent.Variadic.Generator.VariadicAttribute.#ctor(System.String,System.String,System.Int32)
    arguments:
    - type: System.String
      value: QueryEntity<T>
    - type: System.String
      value: QueryEntity<|T$, |>
    - type: System.Int32
      value: 16
  - type: Frent.Variadic.Generator.VariadicAttribute
    ctor: Frent.Variadic.Generator.VariadicAttribute.#ctor(System.String,System.String,System.Int32)
    arguments:
    - type: System.String
      value: Query<T>
    - type: System.String
      value: Query<|T$, |>
    - type: System.Int32
      value: 16
  - type: Frent.Variadic.Generator.VariadicAttribute
    ctor: Frent.Variadic.Generator.VariadicAttribute.#ctor(System.String,System.String,System.Int32)
    arguments:
    - type: System.String
      value: <TQuery, TUniform, T>
    - type: System.String
      value: <TQuery, TUniform, |T$, |>
    - type: System.Int32
      value: 16
  - type: Frent.Variadic.Generator.VariadicAttribute
    ctor: Frent.Variadic.Generator.VariadicAttribute.#ctor(System.String,System.String,System.Int32)
    arguments:
    - type: System.String
      value: Uniform<TUniform, T>
    - type: System.String
      value: Uniform<TUniform, |T$, |>
    - type: System.Int32
      value: 16
  - type: Frent.Variadic.Generator.VariadicAttribute
    ctor: Frent.Variadic.Generator.VariadicAttribute.#ctor(System.String,System.String,System.Int32)
    arguments:
    - type: System.String
      value: ref T arg
    - type: System.String
      value: '|ref T$ arg$, |'
    - type: System.Int32
      value: 16
  - type: Frent.Variadic.Generator.VariadicAttribute
    ctor: Frent.Variadic.Generator.VariadicAttribute.#ctor(System.String,System.String,System.Int32)
    arguments:
    - type: System.String
      value: ref arg
    - type: System.String
      value: '|ref arg$, |'
    - type: System.Int32
      value: 16
  - type: Frent.Variadic.Generator.VariadicAttribute
    ctor: Frent.Variadic.Generator.VariadicAttribute.#ctor(System.String,System.String,System.Int32)
    arguments:
    - type: System.String
      value: ChunkHelpers<T>
    - type: System.String
      value: ChunkHelpers<|T$, |>
    - type: System.Int32
      value: 16
  - type: Frent.Variadic.Generator.VariadicAttribute
    ctor: Frent.Variadic.Generator.VariadicAttribute.#ctor(System.String,System.String,System.Int32)
    arguments:
    - type: System.String
      value: a.GetComponentSpan<T>()
    - type: System.String
      value: '|a.GetComponentSpan<T$>(), |'
    - type: System.Int32
      value: 16
- uid: Frent.WorldStructQueryExtensions.InlineQuery``1(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQuery``1(Frent.World,``0)
  id: InlineQuery``1(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQuery<TQuery>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQuery<TQuery>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQuery<TQuery>(Frent.World, TQuery)
  type: Method
  source:
    remote:
      path: Frent/WorldStructQueryExtensions.Constant.cs
      branch: master
      repo: https://github.com/itsBuggingMe/Frent.git
    id: InlineQuery
    path: WorldStructQueryExtensions.Constant.cs
    startLine: 11
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQuery<TQuery>(this World world, TQuery onEach) where TQuery : IQueryEntity'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    content.vb: Public Shared Sub InlineQuery(Of TQuery As IQueryEntity)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQuery*
  nameWithType.vb: WorldStructQueryExtensions.InlineQuery(Of TQuery)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQuery(Of TQuery)(Frent.World, TQuery)
  name.vb: InlineQuery(Of TQuery)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryUniform``2(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryUniform``2(Frent.World,``0)
  id: InlineQueryUniform``2(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryUniform<TQuery, TUniform>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform>(Frent.World, TQuery)
  type: Method
  source:
    remote:
      path: Frent/WorldStructQueryExtensions.Constant.cs
      branch: master
      repo: https://github.com/itsBuggingMe/Frent.git
    id: InlineQueryUniform
    path: WorldStructQueryExtensions.Constant.cs
    startLine: 28
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryUniform<TQuery, TUniform>(this World world, TQuery onEach) where TQuery : IQueryEntityUniform<TUniform>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    content.vb: Public Shared Sub InlineQueryUniform(Of TQuery As IQueryEntityUniform(Of TUniform), TUniform)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform)(Frent.World, TQuery)
  name.vb: InlineQueryUniform(Of TQuery, TUniform)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQuery``2(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQuery``2(Frent.World,``0)
  id: InlineQuery``2(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQuery<TQuery, T>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQuery<TQuery, T>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQuery<TQuery, T>(Frent.World, TQuery)
  type: Method
  source:
    remote:
      path: Frent/WorldStructQueryExtensions.cs
      branch: master
      repo: https://github.com/itsBuggingMe/Frent.git
    id: InlineQuery
    path: WorldStructQueryExtensions.cs
    startLine: 22
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQuery<TQuery, T>(this World world, TQuery onEach) where TQuery : IQuery<T>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T
    content.vb: Public Shared Sub InlineQuery(Of TQuery As IQuery(Of T), T)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQuery*
  nameWithType.vb: WorldStructQueryExtensions.InlineQuery(Of TQuery, T)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQuery(Of TQuery, T)(Frent.World, TQuery)
  name.vb: InlineQuery(Of TQuery, T)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntity``2(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntity``2(Frent.World,``0)
  id: InlineQueryEntity``2(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntity<TQuery, T>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntity<TQuery, T>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntity<TQuery, T>(Frent.World, TQuery)
  type: Method
  source:
    remote:
      path: Frent/WorldStructQueryExtensions.cs
      branch: master
      repo: https://github.com/itsBuggingMe/Frent.git
    id: InlineQueryEntity
    path: WorldStructQueryExtensions.cs
    startLine: 39
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntity<TQuery, T>(this World world, TQuery onEach) where TQuery : IQueryEntity<T>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T
    content.vb: Public Shared Sub InlineQueryEntity(Of TQuery As IQueryEntity(Of T), T)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntity*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T)(Frent.World, TQuery)
  name.vb: InlineQueryEntity(Of TQuery, T)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``3(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``3(Frent.World,``0)
  id: InlineQueryEntityUniform``3(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntityUniform<TQuery, TUniform, T>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T>(Frent.World, TQuery)
  type: Method
  source:
    remote:
      path: Frent/WorldStructQueryExtensions.cs
      branch: master
      repo: https://github.com/itsBuggingMe/Frent.git
    id: InlineQueryEntityUniform
    path: WorldStructQueryExtensions.cs
    startLine: 56
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntityUniform<TQuery, TUniform, T>(this World world, TQuery onEach) where TQuery : IQueryEntityUniform<TUniform, T>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T
    content.vb: Public Shared Sub InlineQueryEntityUniform(Of TQuery As IQueryEntityUniform(Of TUniform, T), TUniform, T)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T)(Frent.World, TQuery)
  name.vb: InlineQueryEntityUniform(Of TQuery, TUniform, T)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryUniform``3(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryUniform``3(Frent.World,``0)
  id: InlineQueryUniform``3(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryUniform<TQuery, TUniform, T>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T>(Frent.World, TQuery)
  type: Method
  source:
    remote:
      path: Frent/WorldStructQueryExtensions.cs
      branch: master
      repo: https://github.com/itsBuggingMe/Frent.git
    id: InlineQueryUniform
    path: WorldStructQueryExtensions.cs
    startLine: 87
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryUniform<TQuery, TUniform, T>(this World world, TQuery onEach) where TQuery : IQueryUniform<TUniform, T>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T
    content.vb: Public Shared Sub InlineQueryUniform(Of TQuery As IQueryUniform(Of TUniform, T), TUniform, T)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T)(Frent.World, TQuery)
  name.vb: InlineQueryUniform(Of TQuery, TUniform, T)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQuery``4(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQuery``4(Frent.World,``0)
  id: InlineQuery``4(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQuery<TQuery, T1, T2, T3>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQuery
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.3.cs
    startLine: 25
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQuery<TQuery, T1, T2, T3>(this World world, TQuery onEach) where TQuery : IQuery<T1, T2, T3>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    content.vb: Public Shared Sub InlineQuery(Of TQuery As IQuery(Of T1, T2, T3), T1, T2, T3)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQuery*
  nameWithType.vb: WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3)(Frent.World, TQuery)
  name.vb: InlineQuery(Of TQuery, T1, T2, T3)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntity``4(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntity``4(Frent.World,``0)
  id: InlineQueryEntity``4(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntity<TQuery, T1, T2, T3>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntity
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.3.cs
    startLine: 42
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntity<TQuery, T1, T2, T3>(this World world, TQuery onEach) where TQuery : IQueryEntity<T1, T2, T3>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    content.vb: Public Shared Sub InlineQueryEntity(Of TQuery As IQueryEntity(Of T1, T2, T3), T1, T2, T3)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntity*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3)(Frent.World, TQuery)
  name.vb: InlineQueryEntity(Of TQuery, T1, T2, T3)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``5(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``5(Frent.World,``0)
  id: InlineQueryEntityUniform``5(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntityUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.3.cs
    startLine: 59
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3>(this World world, TQuery onEach) where TQuery : IQueryEntityUniform<TUniform, T1, T2, T3>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    content.vb: Public Shared Sub InlineQueryEntityUniform(Of TQuery As IQueryEntityUniform(Of TUniform, T1, T2, T3), TUniform, T1, T2, T3)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3)(Frent.World, TQuery)
  name.vb: InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryUniform``5(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryUniform``5(Frent.World,``0)
  id: InlineQueryUniform``5(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryUniform<TQuery, TUniform, T1, T2, T3>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.3.cs
    startLine: 90
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryUniform<TQuery, TUniform, T1, T2, T3>(this World world, TQuery onEach) where TQuery : IQueryUniform<TUniform, T1, T2, T3>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    content.vb: Public Shared Sub InlineQueryUniform(Of TQuery As IQueryUniform(Of TUniform, T1, T2, T3), TUniform, T1, T2, T3)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3)(Frent.World, TQuery)
  name.vb: InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQuery``6(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQuery``6(Frent.World,``0)
  id: InlineQuery``6(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQuery<TQuery, T1, T2, T3, T4, T5>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQuery
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.5.cs
    startLine: 25
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQuery<TQuery, T1, T2, T3, T4, T5>(this World world, TQuery onEach) where TQuery : IQuery<T1, T2, T3, T4, T5>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    content.vb: Public Shared Sub InlineQuery(Of TQuery As IQuery(Of T1, T2, T3, T4, T5), T1, T2, T3, T4, T5)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQuery*
  nameWithType.vb: WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5)(Frent.World, TQuery)
  name.vb: InlineQuery(Of TQuery, T1, T2, T3, T4, T5)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntity``6(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntity``6(Frent.World,``0)
  id: InlineQueryEntity``6(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntity<TQuery, T1, T2, T3, T4, T5>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntity
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.5.cs
    startLine: 42
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntity<TQuery, T1, T2, T3, T4, T5>(this World world, TQuery onEach) where TQuery : IQueryEntity<T1, T2, T3, T4, T5>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    content.vb: Public Shared Sub InlineQueryEntity(Of TQuery As IQueryEntity(Of T1, T2, T3, T4, T5), T1, T2, T3, T4, T5)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntity*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5)(Frent.World, TQuery)
  name.vb: InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``7(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``7(Frent.World,``0)
  id: InlineQueryEntityUniform``7(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntityUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.5.cs
    startLine: 59
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5>(this World world, TQuery onEach) where TQuery : IQueryEntityUniform<TUniform, T1, T2, T3, T4, T5>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    content.vb: Public Shared Sub InlineQueryEntityUniform(Of TQuery As IQueryEntityUniform(Of TUniform, T1, T2, T3, T4, T5), TUniform, T1, T2, T3, T4, T5)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5)(Frent.World, TQuery)
  name.vb: InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryUniform``7(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryUniform``7(Frent.World,``0)
  id: InlineQueryUniform``7(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.5.cs
    startLine: 90
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5>(this World world, TQuery onEach) where TQuery : IQueryUniform<TUniform, T1, T2, T3, T4, T5>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    content.vb: Public Shared Sub InlineQueryUniform(Of TQuery As IQueryUniform(Of TUniform, T1, T2, T3, T4, T5), TUniform, T1, T2, T3, T4, T5)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5)(Frent.World, TQuery)
  name.vb: InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQuery``16(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQuery``16(Frent.World,``0)
  id: InlineQuery``16(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQuery
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.15.cs
    startLine: 25
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this World world, TQuery onEach) where TQuery : IQuery<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    - id: T12
    - id: T13
    - id: T14
    - id: T15
    content.vb: Public Shared Sub InlineQuery(Of TQuery As IQuery(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQuery*
  nameWithType.vb: WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)(Frent.World, TQuery)
  name.vb: InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntity``16(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntity``16(Frent.World,``0)
  id: InlineQueryEntity``16(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntity
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.15.cs
    startLine: 42
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this World world, TQuery onEach) where TQuery : IQueryEntity<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    - id: T12
    - id: T13
    - id: T14
    - id: T15
    content.vb: Public Shared Sub InlineQueryEntity(Of TQuery As IQueryEntity(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntity*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)(Frent.World, TQuery)
  name.vb: InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``17(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``17(Frent.World,``0)
  id: InlineQueryEntityUniform``17(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntityUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.15.cs
    startLine: 59
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this World world, TQuery onEach) where TQuery : IQueryEntityUniform<TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    - id: T12
    - id: T13
    - id: T14
    - id: T15
    content.vb: Public Shared Sub InlineQueryEntityUniform(Of TQuery As IQueryEntityUniform(Of TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)(Frent.World, TQuery)
  name.vb: InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryUniform``17(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryUniform``17(Frent.World,``0)
  id: InlineQueryUniform``17(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.15.cs
    startLine: 90
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this World world, TQuery onEach) where TQuery : IQueryUniform<TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    - id: T12
    - id: T13
    - id: T14
    - id: T15
    content.vb: Public Shared Sub InlineQueryUniform(Of TQuery As IQueryUniform(Of TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)(Frent.World, TQuery)
  name.vb: InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQuery``11(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQuery``11(Frent.World,``0)
  id: InlineQuery``11(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQuery
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.10.cs
    startLine: 25
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this World world, TQuery onEach) where TQuery : IQuery<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    content.vb: Public Shared Sub InlineQuery(Of TQuery As IQuery(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQuery*
  nameWithType.vb: WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(Frent.World, TQuery)
  name.vb: InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntity``11(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntity``11(Frent.World,``0)
  id: InlineQueryEntity``11(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntity
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.10.cs
    startLine: 42
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this World world, TQuery onEach) where TQuery : IQueryEntity<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    content.vb: Public Shared Sub InlineQueryEntity(Of TQuery As IQueryEntity(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntity*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(Frent.World, TQuery)
  name.vb: InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``12(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``12(Frent.World,``0)
  id: InlineQueryEntityUniform``12(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntityUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.10.cs
    startLine: 59
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this World world, TQuery onEach) where TQuery : IQueryEntityUniform<TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    content.vb: Public Shared Sub InlineQueryEntityUniform(Of TQuery As IQueryEntityUniform(Of TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(Frent.World, TQuery)
  name.vb: InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryUniform``12(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryUniform``12(Frent.World,``0)
  id: InlineQueryUniform``12(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.10.cs
    startLine: 90
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this World world, TQuery onEach) where TQuery : IQueryUniform<TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    content.vb: Public Shared Sub InlineQueryUniform(Of TQuery As IQueryUniform(Of TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(Frent.World, TQuery)
  name.vb: InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQuery``8(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQuery``8(Frent.World,``0)
  id: InlineQuery``8(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQuery
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.7.cs
    startLine: 25
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7>(this World world, TQuery onEach) where TQuery : IQuery<T1, T2, T3, T4, T5, T6, T7>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    content.vb: Public Shared Sub InlineQuery(Of TQuery As IQuery(Of T1, T2, T3, T4, T5, T6, T7), T1, T2, T3, T4, T5, T6, T7)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQuery*
  nameWithType.vb: WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7)(Frent.World, TQuery)
  name.vb: InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntity``8(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntity``8(Frent.World,``0)
  id: InlineQueryEntity``8(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntity
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.7.cs
    startLine: 42
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7>(this World world, TQuery onEach) where TQuery : IQueryEntity<T1, T2, T3, T4, T5, T6, T7>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    content.vb: Public Shared Sub InlineQueryEntity(Of TQuery As IQueryEntity(Of T1, T2, T3, T4, T5, T6, T7), T1, T2, T3, T4, T5, T6, T7)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntity*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7)(Frent.World, TQuery)
  name.vb: InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``9(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``9(Frent.World,``0)
  id: InlineQueryEntityUniform``9(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntityUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.7.cs
    startLine: 59
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7>(this World world, TQuery onEach) where TQuery : IQueryEntityUniform<TUniform, T1, T2, T3, T4, T5, T6, T7>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    content.vb: Public Shared Sub InlineQueryEntityUniform(Of TQuery As IQueryEntityUniform(Of TUniform, T1, T2, T3, T4, T5, T6, T7), TUniform, T1, T2, T3, T4, T5, T6, T7)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7)(Frent.World, TQuery)
  name.vb: InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryUniform``9(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryUniform``9(Frent.World,``0)
  id: InlineQueryUniform``9(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.7.cs
    startLine: 90
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7>(this World world, TQuery onEach) where TQuery : IQueryUniform<TUniform, T1, T2, T3, T4, T5, T6, T7>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    content.vb: Public Shared Sub InlineQueryUniform(Of TQuery As IQueryUniform(Of TUniform, T1, T2, T3, T4, T5, T6, T7), TUniform, T1, T2, T3, T4, T5, T6, T7)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7)(Frent.World, TQuery)
  name.vb: InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQuery``13(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQuery``13(Frent.World,``0)
  id: InlineQuery``13(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQuery
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.12.cs
    startLine: 25
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this World world, TQuery onEach) where TQuery : IQuery<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    - id: T12
    content.vb: Public Shared Sub InlineQuery(Of TQuery As IQuery(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQuery*
  nameWithType.vb: WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(Frent.World, TQuery)
  name.vb: InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntity``13(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntity``13(Frent.World,``0)
  id: InlineQueryEntity``13(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntity
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.12.cs
    startLine: 42
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this World world, TQuery onEach) where TQuery : IQueryEntity<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    - id: T12
    content.vb: Public Shared Sub InlineQueryEntity(Of TQuery As IQueryEntity(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntity*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(Frent.World, TQuery)
  name.vb: InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``14(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``14(Frent.World,``0)
  id: InlineQueryEntityUniform``14(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntityUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.12.cs
    startLine: 59
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this World world, TQuery onEach) where TQuery : IQueryEntityUniform<TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    - id: T12
    content.vb: Public Shared Sub InlineQueryEntityUniform(Of TQuery As IQueryEntityUniform(Of TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(Frent.World, TQuery)
  name.vb: InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryUniform``14(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryUniform``14(Frent.World,``0)
  id: InlineQueryUniform``14(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.12.cs
    startLine: 90
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this World world, TQuery onEach) where TQuery : IQueryUniform<TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    - id: T12
    content.vb: Public Shared Sub InlineQueryUniform(Of TQuery As IQueryUniform(Of TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(Frent.World, TQuery)
  name.vb: InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQuery``3(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQuery``3(Frent.World,``0)
  id: InlineQuery``3(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQuery<TQuery, T1, T2>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQuery
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.2.cs
    startLine: 25
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQuery<TQuery, T1, T2>(this World world, TQuery onEach) where TQuery : IQuery<T1, T2>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    content.vb: Public Shared Sub InlineQuery(Of TQuery As IQuery(Of T1, T2), T1, T2)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQuery*
  nameWithType.vb: WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2)(Frent.World, TQuery)
  name.vb: InlineQuery(Of TQuery, T1, T2)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntity``3(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntity``3(Frent.World,``0)
  id: InlineQueryEntity``3(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntity<TQuery, T1, T2>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntity
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.2.cs
    startLine: 42
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntity<TQuery, T1, T2>(this World world, TQuery onEach) where TQuery : IQueryEntity<T1, T2>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    content.vb: Public Shared Sub InlineQueryEntity(Of TQuery As IQueryEntity(Of T1, T2), T1, T2)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntity*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2)(Frent.World, TQuery)
  name.vb: InlineQueryEntity(Of TQuery, T1, T2)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``4(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``4(Frent.World,``0)
  id: InlineQueryEntityUniform``4(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntityUniform<TQuery, TUniform, T1, T2>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntityUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.2.cs
    startLine: 59
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntityUniform<TQuery, TUniform, T1, T2>(this World world, TQuery onEach) where TQuery : IQueryEntityUniform<TUniform, T1, T2>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    content.vb: Public Shared Sub InlineQueryEntityUniform(Of TQuery As IQueryEntityUniform(Of TUniform, T1, T2), TUniform, T1, T2)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2)(Frent.World, TQuery)
  name.vb: InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryUniform``4(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryUniform``4(Frent.World,``0)
  id: InlineQueryUniform``4(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryUniform<TQuery, TUniform, T1, T2>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.2.cs
    startLine: 90
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryUniform<TQuery, TUniform, T1, T2>(this World world, TQuery onEach) where TQuery : IQueryUniform<TUniform, T1, T2>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    content.vb: Public Shared Sub InlineQueryUniform(Of TQuery As IQueryUniform(Of TUniform, T1, T2), TUniform, T1, T2)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2)(Frent.World, TQuery)
  name.vb: InlineQueryUniform(Of TQuery, TUniform, T1, T2)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQuery``12(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQuery``12(Frent.World,``0)
  id: InlineQuery``12(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQuery
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.11.cs
    startLine: 25
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this World world, TQuery onEach) where TQuery : IQuery<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    content.vb: Public Shared Sub InlineQuery(Of TQuery As IQuery(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQuery*
  nameWithType.vb: WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(Frent.World, TQuery)
  name.vb: InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntity``12(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntity``12(Frent.World,``0)
  id: InlineQueryEntity``12(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntity
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.11.cs
    startLine: 42
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this World world, TQuery onEach) where TQuery : IQueryEntity<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    content.vb: Public Shared Sub InlineQueryEntity(Of TQuery As IQueryEntity(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntity*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(Frent.World, TQuery)
  name.vb: InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``13(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``13(Frent.World,``0)
  id: InlineQueryEntityUniform``13(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntityUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.11.cs
    startLine: 59
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this World world, TQuery onEach) where TQuery : IQueryEntityUniform<TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    content.vb: Public Shared Sub InlineQueryEntityUniform(Of TQuery As IQueryEntityUniform(Of TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(Frent.World, TQuery)
  name.vb: InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryUniform``13(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryUniform``13(Frent.World,``0)
  id: InlineQueryUniform``13(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.11.cs
    startLine: 90
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this World world, TQuery onEach) where TQuery : IQueryUniform<TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    content.vb: Public Shared Sub InlineQueryUniform(Of TQuery As IQueryUniform(Of TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(Frent.World, TQuery)
  name.vb: InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQuery``5(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQuery``5(Frent.World,``0)
  id: InlineQuery``5(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQuery<TQuery, T1, T2, T3, T4>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQuery
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.4.cs
    startLine: 25
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQuery<TQuery, T1, T2, T3, T4>(this World world, TQuery onEach) where TQuery : IQuery<T1, T2, T3, T4>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    content.vb: Public Shared Sub InlineQuery(Of TQuery As IQuery(Of T1, T2, T3, T4), T1, T2, T3, T4)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQuery*
  nameWithType.vb: WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4)(Frent.World, TQuery)
  name.vb: InlineQuery(Of TQuery, T1, T2, T3, T4)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntity``5(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntity``5(Frent.World,``0)
  id: InlineQueryEntity``5(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntity<TQuery, T1, T2, T3, T4>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntity
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.4.cs
    startLine: 42
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntity<TQuery, T1, T2, T3, T4>(this World world, TQuery onEach) where TQuery : IQueryEntity<T1, T2, T3, T4>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    content.vb: Public Shared Sub InlineQueryEntity(Of TQuery As IQueryEntity(Of T1, T2, T3, T4), T1, T2, T3, T4)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntity*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4)(Frent.World, TQuery)
  name.vb: InlineQueryEntity(Of TQuery, T1, T2, T3, T4)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``6(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``6(Frent.World,``0)
  id: InlineQueryEntityUniform``6(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntityUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.4.cs
    startLine: 59
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4>(this World world, TQuery onEach) where TQuery : IQueryEntityUniform<TUniform, T1, T2, T3, T4>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    content.vb: Public Shared Sub InlineQueryEntityUniform(Of TQuery As IQueryEntityUniform(Of TUniform, T1, T2, T3, T4), TUniform, T1, T2, T3, T4)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4)(Frent.World, TQuery)
  name.vb: InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryUniform``6(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryUniform``6(Frent.World,``0)
  id: InlineQueryUniform``6(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.4.cs
    startLine: 90
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4>(this World world, TQuery onEach) where TQuery : IQueryUniform<TUniform, T1, T2, T3, T4>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    content.vb: Public Shared Sub InlineQueryUniform(Of TQuery As IQueryUniform(Of TUniform, T1, T2, T3, T4), TUniform, T1, T2, T3, T4)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4)(Frent.World, TQuery)
  name.vb: InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQuery``9(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQuery``9(Frent.World,``0)
  id: InlineQuery``9(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQuery
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.8.cs
    startLine: 25
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8>(this World world, TQuery onEach) where TQuery : IQuery<T1, T2, T3, T4, T5, T6, T7, T8>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    content.vb: Public Shared Sub InlineQuery(Of TQuery As IQuery(Of T1, T2, T3, T4, T5, T6, T7, T8), T1, T2, T3, T4, T5, T6, T7, T8)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQuery*
  nameWithType.vb: WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8)(Frent.World, TQuery)
  name.vb: InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntity``9(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntity``9(Frent.World,``0)
  id: InlineQueryEntity``9(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntity
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.8.cs
    startLine: 42
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8>(this World world, TQuery onEach) where TQuery : IQueryEntity<T1, T2, T3, T4, T5, T6, T7, T8>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    content.vb: Public Shared Sub InlineQueryEntity(Of TQuery As IQueryEntity(Of T1, T2, T3, T4, T5, T6, T7, T8), T1, T2, T3, T4, T5, T6, T7, T8)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntity*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8)(Frent.World, TQuery)
  name.vb: InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``10(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``10(Frent.World,``0)
  id: InlineQueryEntityUniform``10(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntityUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.8.cs
    startLine: 59
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8>(this World world, TQuery onEach) where TQuery : IQueryEntityUniform<TUniform, T1, T2, T3, T4, T5, T6, T7, T8>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    content.vb: Public Shared Sub InlineQueryEntityUniform(Of TQuery As IQueryEntityUniform(Of TUniform, T1, T2, T3, T4, T5, T6, T7, T8), TUniform, T1, T2, T3, T4, T5, T6, T7, T8)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8)(Frent.World, TQuery)
  name.vb: InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryUniform``10(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryUniform``10(Frent.World,``0)
  id: InlineQueryUniform``10(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.8.cs
    startLine: 90
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8>(this World world, TQuery onEach) where TQuery : IQueryUniform<TUniform, T1, T2, T3, T4, T5, T6, T7, T8>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    content.vb: Public Shared Sub InlineQueryUniform(Of TQuery As IQueryUniform(Of TUniform, T1, T2, T3, T4, T5, T6, T7, T8), TUniform, T1, T2, T3, T4, T5, T6, T7, T8)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8)(Frent.World, TQuery)
  name.vb: InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQuery``14(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQuery``14(Frent.World,``0)
  id: InlineQuery``14(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQuery
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.13.cs
    startLine: 25
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this World world, TQuery onEach) where TQuery : IQuery<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    - id: T12
    - id: T13
    content.vb: Public Shared Sub InlineQuery(Of TQuery As IQuery(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQuery*
  nameWithType.vb: WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(Frent.World, TQuery)
  name.vb: InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntity``14(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntity``14(Frent.World,``0)
  id: InlineQueryEntity``14(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntity
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.13.cs
    startLine: 42
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this World world, TQuery onEach) where TQuery : IQueryEntity<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    - id: T12
    - id: T13
    content.vb: Public Shared Sub InlineQueryEntity(Of TQuery As IQueryEntity(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntity*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(Frent.World, TQuery)
  name.vb: InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``15(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``15(Frent.World,``0)
  id: InlineQueryEntityUniform``15(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntityUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.13.cs
    startLine: 59
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this World world, TQuery onEach) where TQuery : IQueryEntityUniform<TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    - id: T12
    - id: T13
    content.vb: Public Shared Sub InlineQueryEntityUniform(Of TQuery As IQueryEntityUniform(Of TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(Frent.World, TQuery)
  name.vb: InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryUniform``15(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryUniform``15(Frent.World,``0)
  id: InlineQueryUniform``15(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.13.cs
    startLine: 90
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this World world, TQuery onEach) where TQuery : IQueryUniform<TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    - id: T12
    - id: T13
    content.vb: Public Shared Sub InlineQueryUniform(Of TQuery As IQueryUniform(Of TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(Frent.World, TQuery)
  name.vb: InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQuery``15(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQuery``15(Frent.World,``0)
  id: InlineQuery``15(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQuery
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.14.cs
    startLine: 25
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this World world, TQuery onEach) where TQuery : IQuery<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    - id: T12
    - id: T13
    - id: T14
    content.vb: Public Shared Sub InlineQuery(Of TQuery As IQuery(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQuery*
  nameWithType.vb: WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(Frent.World, TQuery)
  name.vb: InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntity``15(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntity``15(Frent.World,``0)
  id: InlineQueryEntity``15(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntity
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.14.cs
    startLine: 42
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this World world, TQuery onEach) where TQuery : IQueryEntity<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    - id: T12
    - id: T13
    - id: T14
    content.vb: Public Shared Sub InlineQueryEntity(Of TQuery As IQueryEntity(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntity*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(Frent.World, TQuery)
  name.vb: InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``16(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``16(Frent.World,``0)
  id: InlineQueryEntityUniform``16(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntityUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.14.cs
    startLine: 59
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this World world, TQuery onEach) where TQuery : IQueryEntityUniform<TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    - id: T12
    - id: T13
    - id: T14
    content.vb: Public Shared Sub InlineQueryEntityUniform(Of TQuery As IQueryEntityUniform(Of TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(Frent.World, TQuery)
  name.vb: InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryUniform``16(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryUniform``16(Frent.World,``0)
  id: InlineQueryUniform``16(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.14.cs
    startLine: 90
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this World world, TQuery onEach) where TQuery : IQueryUniform<TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    - id: T12
    - id: T13
    - id: T14
    content.vb: Public Shared Sub InlineQueryUniform(Of TQuery As IQueryUniform(Of TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(Frent.World, TQuery)
  name.vb: InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQuery``7(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQuery``7(Frent.World,``0)
  id: InlineQuery``7(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQuery<TQuery, T1, T2, T3, T4, T5, T6>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5, T6>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5, T6>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQuery
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.6.cs
    startLine: 25
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQuery<TQuery, T1, T2, T3, T4, T5, T6>(this World world, TQuery onEach) where TQuery : IQuery<T1, T2, T3, T4, T5, T6>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    content.vb: Public Shared Sub InlineQuery(Of TQuery As IQuery(Of T1, T2, T3, T4, T5, T6), T1, T2, T3, T4, T5, T6)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQuery*
  nameWithType.vb: WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6)(Frent.World, TQuery)
  name.vb: InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntity``7(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntity``7(Frent.World,``0)
  id: InlineQueryEntity``7(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntity
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.6.cs
    startLine: 42
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6>(this World world, TQuery onEach) where TQuery : IQueryEntity<T1, T2, T3, T4, T5, T6>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    content.vb: Public Shared Sub InlineQueryEntity(Of TQuery As IQueryEntity(Of T1, T2, T3, T4, T5, T6), T1, T2, T3, T4, T5, T6)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntity*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6)(Frent.World, TQuery)
  name.vb: InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``8(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``8(Frent.World,``0)
  id: InlineQueryEntityUniform``8(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntityUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.6.cs
    startLine: 59
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6>(this World world, TQuery onEach) where TQuery : IQueryEntityUniform<TUniform, T1, T2, T3, T4, T5, T6>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    content.vb: Public Shared Sub InlineQueryEntityUniform(Of TQuery As IQueryEntityUniform(Of TUniform, T1, T2, T3, T4, T5, T6), TUniform, T1, T2, T3, T4, T5, T6)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6)(Frent.World, TQuery)
  name.vb: InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryUniform``8(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryUniform``8(Frent.World,``0)
  id: InlineQueryUniform``8(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.6.cs
    startLine: 90
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6>(this World world, TQuery onEach) where TQuery : IQueryUniform<TUniform, T1, T2, T3, T4, T5, T6>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    content.vb: Public Shared Sub InlineQueryUniform(Of TQuery As IQueryUniform(Of TUniform, T1, T2, T3, T4, T5, T6), TUniform, T1, T2, T3, T4, T5, T6)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6)(Frent.World, TQuery)
  name.vb: InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQuery``10(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQuery``10(Frent.World,``0)
  id: InlineQuery``10(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQuery
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.9.cs
    startLine: 25
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9>(this World world, TQuery onEach) where TQuery : IQuery<T1, T2, T3, T4, T5, T6, T7, T8, T9>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    content.vb: Public Shared Sub InlineQuery(Of TQuery As IQuery(Of T1, T2, T3, T4, T5, T6, T7, T8, T9), T1, T2, T3, T4, T5, T6, T7, T8, T9)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQuery*
  nameWithType.vb: WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9)(Frent.World, TQuery)
  name.vb: InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntity``10(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntity``10(Frent.World,``0)
  id: InlineQueryEntity``10(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntity
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.9.cs
    startLine: 42
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9>(this World world, TQuery onEach) where TQuery : IQueryEntity<T1, T2, T3, T4, T5, T6, T7, T8, T9>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    content.vb: Public Shared Sub InlineQueryEntity(Of TQuery As IQueryEntity(Of T1, T2, T3, T4, T5, T6, T7, T8, T9), T1, T2, T3, T4, T5, T6, T7, T8, T9)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntity*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9)(Frent.World, TQuery)
  name.vb: InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``11(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``11(Frent.World,``0)
  id: InlineQueryEntityUniform``11(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntityUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.9.cs
    startLine: 59
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9>(this World world, TQuery onEach) where TQuery : IQueryEntityUniform<TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    content.vb: Public Shared Sub InlineQueryEntityUniform(Of TQuery As IQueryEntityUniform(Of TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9), TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9)(Frent.World, TQuery)
  name.vb: InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryUniform``11(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryUniform``11(Frent.World,``0)
  id: InlineQueryUniform``11(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.9.cs
    startLine: 90
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9>(this World world, TQuery onEach) where TQuery : IQueryUniform<TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    content.vb: Public Shared Sub InlineQueryUniform(Of TQuery As IQueryUniform(Of TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9), TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9)(Frent.World, TQuery)
  name.vb: InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQuery``17(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQuery``17(Frent.World,``0)
  id: InlineQuery``17(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQuery
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.16.cs
    startLine: 25
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQuery<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this World world, TQuery onEach) where TQuery : IQuery<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    - id: T12
    - id: T13
    - id: T14
    - id: T15
    - id: T16
    content.vb: Public Shared Sub InlineQuery(Of TQuery As IQuery(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQuery*
  nameWithType.vb: WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)(Frent.World, TQuery)
  name.vb: InlineQuery(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntity``17(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntity``17(Frent.World,``0)
  id: InlineQueryEntity``17(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntity
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.16.cs
    startLine: 42
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntity<TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this World world, TQuery onEach) where TQuery : IQueryEntity<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    - id: T12
    - id: T13
    - id: T14
    - id: T15
    - id: T16
    content.vb: Public Shared Sub InlineQueryEntity(Of TQuery As IQueryEntity(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntity*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)(Frent.World, TQuery)
  name.vb: InlineQueryEntity(Of TQuery, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``18(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryEntityUniform``18(Frent.World,``0)
  id: InlineQueryEntityUniform``18(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryEntityUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.16.cs
    startLine: 59
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryEntityUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this World world, TQuery onEach) where TQuery : IQueryEntityUniform<TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    - id: T12
    - id: T13
    - id: T14
    - id: T15
    - id: T16
    content.vb: Public Shared Sub InlineQueryEntityUniform(Of TQuery As IQueryEntityUniform(Of TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)(Frent.World, TQuery)
  name.vb: InlineQueryEntityUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)(World, TQuery)
- uid: Frent.WorldStructQueryExtensions.InlineQueryUniform``18(Frent.World,``0)
  commentId: M:Frent.WorldStructQueryExtensions.InlineQueryUniform``18(Frent.World,``0)
  id: InlineQueryUniform``18(Frent.World,``0)
  isExtensionMethod: true
  parent: Frent.WorldStructQueryExtensions
  langs:
  - csharp
  - vb
  name: InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(World, TQuery)
  nameWithType: WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(World, TQuery)
  fullName: Frent.WorldStructQueryExtensions.InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(Frent.World, TQuery)
  type: Method
  source:
    id: InlineQueryUniform
    path: Frent.Variadic.Generator\Frent.Variadic.Generator.VariadicGenerator\WorldStructQueryExtensions.16.cs
    startLine: 90
  assemblies:
  - Frent
  namespace: Frent
  syntax:
    content: 'public static void InlineQueryUniform<TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this World world, TQuery onEach) where TQuery : IQueryUniform<TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>'
    parameters:
    - id: world
      type: Frent.World
    - id: onEach
      type: '{TQuery}'
    typeParameters:
    - id: TQuery
    - id: TUniform
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: T10
    - id: T11
    - id: T12
    - id: T13
    - id: T14
    - id: T15
    - id: T16
    content.vb: Public Shared Sub InlineQueryUniform(Of TQuery As IQueryUniform(Of TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)(world As World, onEach As TQuery)
  overload: Frent.WorldStructQueryExtensions.InlineQueryUniform*
  nameWithType.vb: WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)(World, TQuery)
  fullName.vb: Frent.WorldStructQueryExtensions.InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)(Frent.World, TQuery)
  name.vb: InlineQueryUniform(Of TQuery, TUniform, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)(World, TQuery)
references:
- uid: Frent
  commentId: N:Frent
  href: Frent.html
  name: Frent
  nameWithType: Frent
  fullName: Frent
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Frent.WorldStructQueryExtensions.InlineQuery*
  commentId: Overload:Frent.WorldStructQueryExtensions.InlineQuery
  href: Frent.WorldStructQueryExtensions.html#Frent_WorldStructQueryExtensions_InlineQuery__1_Frent_World___0_
  name: InlineQuery
  nameWithType: WorldStructQueryExtensions.InlineQuery
  fullName: Frent.WorldStructQueryExtensions.InlineQuery
- uid: Frent.World
  commentId: T:Frent.World
  parent: Frent
  href: Frent.World.html
  name: World
  nameWithType: World
  fullName: Frent.World
- uid: '{TQuery}'
  commentId: '!:TQuery'
  definition: TQuery
  name: TQuery
  nameWithType: TQuery
  fullName: TQuery
- uid: TQuery
  name: TQuery
  nameWithType: TQuery
  fullName: TQuery
- uid: Frent.WorldStructQueryExtensions.InlineQueryUniform*
  commentId: Overload:Frent.WorldStructQueryExtensions.InlineQueryUniform
  href: Frent.WorldStructQueryExtensions.html#Frent_WorldStructQueryExtensions_InlineQueryUniform__2_Frent_World___0_
  name: InlineQueryUniform
  nameWithType: WorldStructQueryExtensions.InlineQueryUniform
  fullName: Frent.WorldStructQueryExtensions.InlineQueryUniform
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntity*
  commentId: Overload:Frent.WorldStructQueryExtensions.InlineQueryEntity
  href: Frent.WorldStructQueryExtensions.html#Frent_WorldStructQueryExtensions_InlineQueryEntity__2_Frent_World___0_
  name: InlineQueryEntity
  nameWithType: WorldStructQueryExtensions.InlineQueryEntity
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntity
- uid: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform*
  commentId: Overload:Frent.WorldStructQueryExtensions.InlineQueryEntityUniform
  href: Frent.WorldStructQueryExtensions.html#Frent_WorldStructQueryExtensions_InlineQueryEntityUniform__3_Frent_World___0_
  name: InlineQueryEntityUniform
  nameWithType: WorldStructQueryExtensions.InlineQueryEntityUniform
  fullName: Frent.WorldStructQueryExtensions.InlineQueryEntityUniform
