### YamlMime:ManagedReference
items:
- uid: Frent.Core.Ref`1
  commentId: T:Frent.Core.Ref`1
  id: Ref`1
  parent: Frent.Core
  children:
  - Frent.Core.Ref`1.Component
  - Frent.Core.Ref`1.ToString
  - Frent.Core.Ref`1.op_Implicit(Frent.Core.Ref{`0})~`0
  langs:
  - csharp
  - vb
  name: Ref<T>
  nameWithType: Ref<T>
  fullName: Frent.Core.Ref<T>
  type: Struct
  source:
    remote:
      path: Frent/Core/Ref.cs
      branch: master
      repo: https://github.com/itsBuggingMe/Frent.git
    id: Ref
    path: Core/Ref.cs
    startLine: 6
  assemblies:
  - Frent
  namespace: Frent.Core
  summary: A wrapper ref struct over a reference to a <code class="typeparamref">T</code>
  example: []
  syntax:
    content: public ref struct Ref<T>
    typeParameters:
    - id: T
      description: The type this <xref href="Frent.Core.Ref%601" data-throw-if-not-resolved="false"></xref> wraps over
    content.vb: Public Structure Ref(Of T)
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: Ref(Of T)
  fullName.vb: Frent.Core.Ref(Of T)
  name.vb: Ref(Of T)
- uid: Frent.Core.Ref`1.Component
  commentId: P:Frent.Core.Ref`1.Component
  id: Component
  parent: Frent.Core.Ref`1
  langs:
  - csharp
  - vb
  name: Component
  nameWithType: Ref<T>.Component
  fullName: Frent.Core.Ref<T>.Component
  type: Property
  source:
    remote:
      path: Frent/Core/Ref.cs
      branch: master
      repo: https://github.com/itsBuggingMe/Frent.git
    id: Component
    path: Core/Ref.cs
    startLine: 16
  assemblies:
  - Frent
  namespace: Frent.Core
  summary: The wrapped reference to <code class="typeparamref">T</code>
  example: []
  syntax:
    content: public ref T Component { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly ByRef Property Component As T
  overload: Frent.Core.Ref`1.Component*
  nameWithType.vb: Ref(Of T).Component
  fullName.vb: Frent.Core.Ref(Of T).Component
- uid: Frent.Core.Ref`1.op_Implicit(Frent.Core.Ref{`0})~`0
  commentId: M:Frent.Core.Ref`1.op_Implicit(Frent.Core.Ref{`0})~`0
  id: op_Implicit(Frent.Core.Ref{`0})~`0
  parent: Frent.Core.Ref`1
  langs:
  - csharp
  - vb
  name: implicit operator T(Ref<T>)
  nameWithType: Ref<T>.implicit operator T(Ref<T>)
  fullName: Frent.Core.Ref<T>.implicit operator T(Frent.Core.Ref<T>)
  type: Operator
  source:
    remote:
      path: Frent/Core/Ref.cs
      branch: master
      repo: https://github.com/itsBuggingMe/Frent.git
    id: op_Implicit
    path: Core/Ref.cs
    startLine: 20
  assemblies:
  - Frent
  namespace: Frent.Core
  summary: Extracts the wrapped <code class="typeparamref">T</code> from this <xref href="Frent.Core.Ref%601" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static implicit operator T(Ref<T> @ref)
    parameters:
    - id: ref
      type: Frent.Core.Ref`1
    return:
      type: '{T}'
    content.vb: Public Shared Widening Operator CType(ref As Ref(Of T)) As T
  overload: Frent.Core.Ref`1.op_Implicit*
  nameWithType.vb: Ref(Of T).CType(Ref(Of T))
  fullName.vb: Frent.Core.Ref(Of T).CType(Frent.Core.Ref(Of T))
  name.vb: CType(Ref(Of T))
- uid: Frent.Core.Ref`1.ToString
  commentId: M:Frent.Core.Ref`1.ToString
  id: ToString
  parent: Frent.Core.Ref`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Ref<T>.ToString()
  fullName: Frent.Core.Ref<T>.ToString()
  type: Method
  source:
    remote:
      path: Frent/Core/Ref.cs
      branch: master
      repo: https://github.com/itsBuggingMe/Frent.git
    id: ToString
    path: Core/Ref.cs
    startLine: 25
  assemblies:
  - Frent
  namespace: Frent.Core
  summary: Calls the wrapped <code class="typeparamref">T</code>'s ToString() function, or returns null.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string representation of the wrapped <code class="typeparamref">T</code>'s
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: Frent.Core.Ref`1.ToString*
  nameWithType.vb: Ref(Of T).ToString()
  fullName.vb: Frent.Core.Ref(Of T).ToString()
references:
- uid: Frent.Core.Ref`1
  commentId: T:Frent.Core.Ref`1
  parent: Frent.Core
  href: Frent.Core.Ref-1.html
  name: Ref<T>
  nameWithType: Ref<T>
  fullName: Frent.Core.Ref<T>
  nameWithType.vb: Ref(Of T)
  fullName.vb: Frent.Core.Ref(Of T)
  name.vb: Ref(Of T)
  spec.csharp:
  - uid: Frent.Core.Ref`1
    name: Ref
    href: Frent.Core.Ref-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Frent.Core.Ref`1
    name: Ref
    href: Frent.Core.Ref-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Frent.Core
  commentId: N:Frent.Core
  href: Frent.html
  name: Frent.Core
  nameWithType: Frent.Core
  fullName: Frent.Core
  spec.csharp:
  - uid: Frent
    name: Frent
    href: Frent.html
  - name: .
  - uid: Frent.Core
    name: Core
    href: Frent.Core.html
  spec.vb:
  - uid: Frent
    name: Frent
    href: Frent.html
  - name: .
  - uid: Frent.Core
    name: Core
    href: Frent.Core.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Frent.Core.Ref`1.Component*
  commentId: Overload:Frent.Core.Ref`1.Component
  href: Frent.Core.Ref-1.html#Frent_Core_Ref_1_Component
  name: Component
  nameWithType: Ref<T>.Component
  fullName: Frent.Core.Ref<T>.Component
  nameWithType.vb: Ref(Of T).Component
  fullName.vb: Frent.Core.Ref(Of T).Component
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Frent.Core.Ref`1.op_Implicit*
  commentId: Overload:Frent.Core.Ref`1.op_Implicit
  name: implicit operator
  nameWithType: Ref<T>.implicit operator
  fullName: Frent.Core.Ref<T>.implicit operator
  nameWithType.vb: Ref(Of T).CType
  fullName.vb: Frent.Core.Ref(Of T).CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: Frent.Core.Ref`1.ToString*
  commentId: Overload:Frent.Core.Ref`1.ToString
  href: Frent.Core.Ref-1.html#Frent_Core_Ref_1_ToString
  name: ToString
  nameWithType: Ref<T>.ToString
  fullName: Frent.Core.Ref<T>.ToString
  nameWithType.vb: Ref(Of T).ToString
  fullName.vb: Frent.Core.Ref(Of T).ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
